{"ast":null,"code":"var _jsxFileName = \"/home/vignesh/Videos/Assignment1/assignment1/src/components/Filter.js\";\nimport React, { Component } from 'react';\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDivider = event => {\n      this.setState({\n        divider: event.target.value\n      });\n    };\n\n    this.filterFunction = () => {\n      return this.props.array.filter(value => {\n        return value % this.state.divider === 0;\n      });\n    };\n\n    this.filterBasedOnMultiplier = value => {\n      return value % this.state.divider === 0;\n    };\n\n    this.state = {\n      array: [],\n      divider: 1,\n      funcName: ''\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      array: nextProps.array,\n      funcName: nextProps.name\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \" Enter number to divide \",\n      onChange: this.updateDivider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, 'Function used : ' + this.state.funcName), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.filterFunction()));\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["/home/vignesh/Videos/Assignment1/assignment1/src/components/Filter.js"],"names":["React","Component","Filter","constructor","props","updateDivider","event","setState","divider","target","value","filterFunction","array","filter","state","filterBasedOnMultiplier","funcName","getDerivedStateFromProps","nextProps","prevState","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,aAbkB,GAaDC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAGF,KAAK,CAACG,MAAN,CAAaC;AADb,OAAd;AAGH,KAjBiB;;AAAA,SAmBlBC,cAnBkB,GAmBD,MAAM;AACnB,aAAO,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAyBH,KAAD,IAAW;AACtC,eAAOA,KAAK,GAAC,KAAKI,KAAL,CAAWN,OAAjB,KAA6B,CAApC;AACH,OAFM,CAAP;AAGH,KAvBiB;;AAAA,SAyBlBO,uBAzBkB,GAyBSL,KAAD,IAAW;AACjC,aAAOA,KAAK,GAAC,KAAKI,KAAL,CAAWN,OAAjB,KAA6B,CAApC;AACH,KA3BiB;;AAEd,SAAKM,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAG,EADC;AAETJ,MAAAA,OAAO,EAAG,CAFD;AAGTQ,MAAAA,QAAQ,EAAG;AAHF,KAAb;AAKH;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAqD;AACjD,WAAO;AAACP,MAAAA,KAAK,EAAGM,SAAS,CAACN,KAAnB;AAA0BI,MAAAA,QAAQ,EAAGE,SAAS,CAACE;AAA/C,KAAP;AACH;;AAkBDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,0BAA/B;AAA0D,MAAA,QAAQ,EAAE,KAAKhB,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,qBAAmB,KAAKS,KAAL,CAAWE,QADnC,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,cAAL,EADL,CALJ,CADJ;AAWH;;AA1C0B;;AA6C/B,eAAeT,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Filter extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            array : [],\n            divider : 1,\n            funcName : ''\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        return {array : nextProps.array, funcName : nextProps.name}\n    }\n\n    updateDivider = (event) => {\n        this.setState({\n            divider : event.target.value\n        })\n    }\n\n    filterFunction = () => {\n        return this.props.array.filter((value) => {\n            return value%this.state.divider === 0\n        })\n    }\n\n    filterBasedOnMultiplier = (value) => {\n        return value%this.state.divider === 0\n    }\n\n    render() {\n        return ( \n            <div>\n                <input type='text' placeholder=' Enter number to divide ' onChange={this.updateDivider}/>\n                <div>\n                    {'Function used : '+this.state.funcName}\n                </div>\n                <div>\n                    {this.filterFunction()}\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Filter;"]},"metadata":{},"sourceType":"module"}